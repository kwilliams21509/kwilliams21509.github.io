minn$Searches = strtoi(minn$Searches)
minn$interven = 0
minn = minn %>%
mutate(interven = ifelse(Date>"2020-03-01", (interven = 1), (interven = 0 )))
#add treatment variable for george floyd news
minn$george = 0
minn = minn %>%
mutate(george = ifelse(Date>"2021-05-25", (george = 1), (george = 0)))
ggplot(minn, aes(x=Date, y = Searches)) + geom_point(color= "green")
summary(lm(minn$Searches ~ minn$interven + minn$george))
#look at tweets including mutual aid related vocaband reverse order them based
#on retweet count search tweets only goes back 6 days
aidtweets = search_tweets("mutual aid  OR donate OR gofundme.com OR fund OR
gofund.me OR donation",  n = 18000,
include_rts =FALSE)
# get top words in aid related tweets
wordcounts = aidtweets %>%
unnest_tokens(word, text) %>%
anti_join(get_stopwords()) %>%
group_by(word) %>%
filter(n() >5) %>%
ungroup()
#make into sparse matrix
sparsewords=  wordcounts %>%
count(created_at, word) %>%
cast_sparse(created_at, word, n)
aidtweets %>%
unnest_tokens(word, text) %>%
anti_join(get_stopwords()) %>%
count(word, sort = TRUE) %>%
slice_max(n, n= 30) %>%
ggplot(aes(n, word)) +
geom_col(show.legend = FALSE, alpha = 0.8) +
scale_y_reordered() +
#facet_wrap(~unpopular, scales = "free") +
labs( x= "Frequency", title = "Top Words Used in Aid Tweets")
#look at tweets including mutual aid related vocaband reverse order them based
#on retweet count search tweets only goes back 6 days
aidtweets = search_tweets("mutual aid  OR donate OR gofundme.com OR fund OR
gofund.me OR donation",  n = 18000,
include_rts =FALSE)
#subset key variables from aidtweets dataframe
wantedvars = c("screen_name", "created_at", "text", "retweet_count",
"retweet_text", "followers_count")
aidtweets = aidtweets[wantedvars]
#get top words used in most popular tweets
#assign a variable for knowing more popular tweets
aidtweets$popular = 0
aidtweets= aidtweets %>%
mutate(popular = ifelse(retweet_count/followers_count >
mean(retweet_count/followers_count), (popular = 1),
(popular = 0)))
wordcounts = aidtweets %>%
unnest_tokens(word, text) %>%
anti_join(get_stopwords()) %>%
group_by(word) %>%
filter(n() >5) %>%
ungroup()
#make into sparse matrix
sparsewords=  wordcounts %>%
count(created_at, word) %>%
cast_sparse(created_at, word, n)
#create bar graph
aidtweets %>%
unnest_tokens(word, text) %>%
anti_join(get_stopwords()) %>%
count(popular, word, sort = TRUE) %>%
group_by(popular) %>%
slice_max(n, n= 20) %>%
ungroup() %>%
mutate(word = reorder_within(word, n, popular)) %>%
ggplot(aes(n, word, fill = popular)) +
geom_col(show.legend = FALSE, alpha = 0.8) +
scale_y_reordered() +
facet_wrap(~popular, scales = "free") +
labs( x= "Frequency", title = "Top Words Used in Aid Tweets by Popularity")
#create list with key words to signal aid
aidwords = c("mutual aid fund", "donate", "gofundme", "mutual aid", "fund",
"housing fund", "funds", "gofund.me", "gofundme.com", "donations")
aidpattern = paste(aidwords, collapse = "|")
#order the tweets by top retweet count and get the screen names of those with
#those with the greatest retweet count
aidtweets = aidtweets[order(-aidtweets$retweet_count), ]
toptweeters = aidtweets$screen_name[1:30]
toptimelines = get_timelines(toptweeters, n =3000)
#add a variable that denotes whether the tweet includes aid words
toptimelines$text = tolower(toptimelines$text)
toptimelines$aidwordincluded = 0
toptimelines= toptimelines %>%
mutate(aidwordincluded = ifelse(grepl(aidpattern, text), (aidwordincluded = 1),
(aidwordincluded = 0)))
toptimelines = toptimelines[order(-toptweeters$aidwordincluded), ]
#add a variable that denotes whether the tweet includes aid words
toptimelines$text = tolower(toptimelines$text)
toptimelines$aidwordincluded = 0
toptimelines= toptimelines %>%
mutate(aidwordincluded = ifelse(grepl(aidpattern, text), (aidwordincluded = 1),
(aidwordincluded = 0)))
toptimelines = toptimelines[order(-toptweeters$aidwordincluded), ]
#add a variable that denotes whether the tweet includes aid words
toptimelines$text = tolower(toptimelines$text)
toptimelines$aidwordincluded = 0
toptimelines= toptimelines %>%
mutate(aidwordincluded = ifelse(grepl(aidpattern, text), (aidwordincluded = 1),
(aidwordincluded = 0)))
toptimelines = toptimelines[-order(toptweeters$aidwordincluded), ]
#add a variable that denotes whether the tweet includes aid words
toptimelines$text = tolower(toptimelines$text)
toptimelines$aidwordincluded = 0
toptimelines= toptimelines %>%
mutate(aidwordincluded = ifelse(grepl(aidpattern, text), (aidwordincluded = 1),
(aidwordincluded = 0)))
#toptimelines = toptimelines[order(toptweeters$aidwordincluded), ]
#toptimelines
#create a date variable
toptimelines$date = substr(toptimelines$created_at, 1, 10)
toptimelines$date = as.Date(toptimelines$date)
head(toptimelines)
#get number of tweets with aid words each day
toptimelines$dailyaidcount = 0
toptimelines %>%
group_by(date) %>%
mutate(dailyaidcount = sum(aidwordincluded)) %>%
ungroup
#create an interven var to know what if it tweet is after focal point
#March 2020
toptimelines$interven = 0
toptimelines = toptimelines %>%
mutate(interven = ifelse(date >"2020-03-01", (interven=1), (interven = 0 )))
toptimelines = na.omit(toptimelines)
#plot the daily aid counts over time
toptimelines %>%
ggplot(aes(x = date, y = dailyaidcount, fill = inerven)) +
geom_point(color="pink") +
labs(title = "Daily Aid Count",
subtitle = "Number of tweets in top timelines with aid words each day",
y = "Tweets with Aid Words", x = "Date")
#plot the daily aid counts over time
toptimelines %>%
ggplot(aes(x = date, y = dailyaidcount, fill = interven)) +
geom_point(color="pink") +
labs(title = "Daily Aid Count",
subtitle = "Number of tweets in top timelines with aid words each day",
y = "Tweets with Aid Words", x = "Date")
#create an interven var to know what if it tweet is after focal point
#March 2020
toptimelines$interven = 0
toptimelines = toptimelines %>%
mutate(interven = ifelse(date >"2020-03-01", (interven=1), (interven = 0 )))
toptimelines = na.omit(toptimelines)
#create an interven var to know what if it tweet is after focal point
#March 2020
toptimelines$interven = 0
toptimelines = toptimelines %>%
mutate(interven = ifelse(date >"2020-03-01", (interven=1), (interven = 0 )))
toptimelines = na.omit(toptimelines)
toptimelines
#create an interven var to know what if it tweet is after focal point
#March 2020
toptimelines$interven = 0
toptimelines = toptimelines %>%
mutate(interven = ifelse(date >"2020-03-01", (interven=1), (interven = 0)))
toptimelines
#plot the daily aid counts over time
toptimelines %>%
ggplot(aes(x = date, y = dailyaidcountn)) +
geom_point(color="pink") +
labs(title = "Daily Aid Count",
subtitle = "Number of tweets in top timelines with aid words each day",
y = "Tweets with Aid Words", x = "Date")
#plot the daily aid counts over time
toptimelines %>%
ggplot(aes(x = date, y = dailyaidcount)) +
geom_point(color="pink") +
labs(title = "Daily Aid Count",
subtitle = "Number of tweets in top timelines with aid words each day",
y = "Tweets with Aid Words", x = "Date")
#create an interven var to know what if it tweet is after focal point
#March 2020
toptimelines$interven = 0
toptimelines = toptimelines %>%
mutate(interven = ifelse(date >"2020-03-01", (interven=1), (interven = 0)))
toptimelines
#add a variable that denotes whether the tweet includes aid words
toptimelines = toptimelines[wantedvars]
toptimelines$text = tolower(toptimelines$text)
toptimelines$aidwordincluded = 0
toptimelines= toptimelines %>%
mutate(aidwordincluded = ifelse(grepl(aidpattern, text), (aidwordincluded = 1),
(aidwordincluded = 0)))
#toptimelines = toptimelines[order(toptweeters$aidwordincluded), ]
#toptimelines
#create a date variable
toptimelines$date = substr(toptimelines$created_at, 1, 10)
toptimelines$date = as.Date(toptimelines$date)
head(toptimelines)
#add a variable that denotes whether the tweet includes aid words
toptimelines = toptimelines[wantedvars]
toptimelines$text = tolower(toptimelines$text)
toptimelines$aidwordincluded = 0
toptimelines= toptimelines %>%
mutate(aidwordincluded = ifelse(grepl(aidpattern, text), (aidwordincluded = 1),
(aidwordincluded = 0)))
#toptimelines = toptimelines[order(toptweeters$aidwordincluded), ]
#toptimelines
#add a variable that denotes whether the tweet includes aid words
toptimelines = toptimelines[wantedvars]
toptimelines$text = tolower(toptimelines$text)
toptimelines$aidwordincluded = 0
toptimelines= toptimelines %>%
mutate(aidwordincluded = ifelse(grepl(aidpattern, text), (aidwordincluded = 1),
(aidwordincluded = 0)))
toptimelines
#add a variable that denotes whether the tweet includes aid words
toptimelines$text = tolower(toptimelines$text)
toptimelines$aidwordincluded = 0
toptimelines= toptimelines %>%
mutate(aidwordincluded = ifelse(grepl(aidpattern, text), (aidwordincluded = 1),
(aidwordincluded = 0)))
toptimelines
#create list with key words to signal aid
aidwords = c("mutual aid fund", "donate", "gofundme", "mutual aid", "fund",
"housing fund", "funds", "gofund.me", "gofundme.com", "donations")
aidpattern = paste(aidwords, collapse = "|")
#order the tweets by top retweet count and get the screen names of those with
#those with the greatest retweet count
aidtweets = aidtweets[order(-aidtweets$retweet_count), ]
toptweeters = aidtweets$screen_name[1:30]
toptimelines = get_timelines(toptweeters, n =3000)
#add a variable that denotes whether the tweet includes aid words
wantedvars = c("screen_name", "created_at", "text", "retweet_count",
"retweet_text", "followers_count")
toptimelines = toptimelines[wantedvars]
toptimelines$text = tolower(toptimelines$text)
toptimelines$aidwordincluded = 0
toptimelines= toptimelines %>%
mutate(aidwordincluded = ifelse(grepl(aidpattern, text), (aidwordincluded = 1),
(aidwordincluded = 0)))
toptimelines
#create a date variable
toptimelines$date = substr(toptimelines$created_at, 1, 10)
toptimelines$date = as.Date(toptimelines$date)
#get number of tweets with aid words each day
toptimelines$dailyaidcount = 0
toptimelines %>%
group_by(date) %>%
mutate(dailyaidcount = sum(aidwordincluded)) %>%
ungroup
#create an interven var to know what if it tweet is after focal point
#March 2020
toptimelines$interven = 0
toptimelines = toptimelines %>%
mutate(interven = ifelse(date >"2020-03-01", (interven=1), (interven = 0)))
toptimelines
#plot the daily aid counts over time
toptimelines %>%
ggplot(aes(x = date, y = dailyaidcount)) +
geom_point(color="pink") +
labs(title = "Daily Aid Count",
subtitle = "Number of tweets in top timelines with aid words each day",
y = "Tweets with Aid Words", x = "Date")
#create a date variable
toptimelines$date = substr(toptimelines$created_at, 1, 10)
toptimelines$date = as.Date(toptimelines$date)
#get number of tweets with aid words each day
toptimelines$dailyaidcount = 0
toptimelines %>%
group_by(date) %>%
mutate(dailyaidcount = sum(aidwordincluded)) %>%
ungroup
#plot the daily aid counts over time
toptimelines %>%
ggplot(aes(x = date, y = dailyaidcount)) +
geom_point(color="pink") +
labs(title = "Daily Aid Count",
subtitle = "Number of tweets in top timelines with aid words each day",
y = "Tweets with Aid Words", x = "Date")
#create a date variable
toptimelines$date = substr(toptimelines$created_at, 1, 10)
toptimelines$date = as.Date(toptimelines$date)
#get number of tweets with aid words each day
toptimelines$dailyaidcount = 1
toptimelines %>%
group_by(date) %>%
mutate(dailyaidcount = sum(aidwordincluded)) %>%
ungroup
#plot the daily aid counts over time
toptimelines %>%
ggplot(aes(x = date, y = timelines$dailyaidcount)) +
geom_point(color="pink") +
labs(title = "Daily Aid Count",
subtitle = "Number of tweets in top timelines with aid words each day",
y = "Tweets with Aid Words", x = "Date")
#create a date variable
toptimelines$date = substr(toptimelines$created_at, 1, 10)
toptimelines$date = as.Date(toptimelines$date)
#get number of tweets with aid words each day
toptimelines$dailyaidcount = 1
toptimelines %>%
group_by(date) %>%
mutate(dailyaidcount = sum(aidwordincluded)) %>%
ungroup
#plot the daily aid counts over time
toptimelines %>%
ggplot(aes(x = date, y = toptimelines$dailyaidcount)) +
geom_point(color="pink") +
labs(title = "Daily Aid Count",
subtitle = "Number of tweets in top timelines with aid words each day",
y = "Tweets with Aid Words", x = "Date")
#create a date variable
toptimelines$date = substr(toptimelines$created_at, 1, 10)
toptimelines$date = as.Date(toptimelines$date)
#get number of tweets with aid words each day
toptimelines$dailyaidcount = 1
toptimelines %>%
group_by(date) %>%
mutate(dailyaidcount = sum(aidwordincluded)) %>%
ggplot(aes(x = date, y = toptimelines$dailyaidcount)) +
geom_point(color="pink") +
labs(title = "Daily Aid Count",
subtitle = "Number of tweets in top timelines with aid words each day",
y = "Tweets with Aid Words", x = "Date")
#create a date variable
toptimelines$date = substr(toptimelines$created_at, 1, 10)
toptimelines$date = as.Date(toptimelines$date)
#get number of tweets with aid words each day
toptimelines$dailyaidcount = 1
toptimelines %>%
group_by(date) %>%
mutate(toptimelines$dailyaidcount = sum(aidwordincluded)) %>%
#create a date variable
toptimelines$date = substr(toptimelines$created_at, 1, 10)
toptimelines$date = as.Date(toptimelines$date)
#get number of tweets with aid words each day
toptimelines$dailyaidcount = 1
toptimelines %>%
group_by(date) %>%
mutate(toptimelines$dailyaidcount = sum(aidwordincluded)) %>%
#create a date variable
toptimelines$date = substr(toptimelines$created_at, 1, 10)
toptimelines$date = as.Date(toptimelines$date)
#get number of tweets with aid words each day
toptimelines %>%
group_by(date) %>%
mutate(toptimelines$dailyaidcount = sum(aidwordincluded)) %>%
#create a date variable
toptimelines$date = substr(toptimelines$created_at, 1, 10)
toptimelines$date = as.Date(toptimelines$date)
#get number of tweets with aid words each day
toptimelines %>%
group_by(date) %>%
mutate(dailyaidcount = sum(aidwordincluded)) %>%
ggplot(aes(x = date, y = toptimelines$dailyaidcount)) +
geom_point(color="pink") +
labs(title = "Daily Aid Count",
subtitle = "Number of tweets in top timelines with aid words each day",
y = "Tweets with Aid Words", x = "Date")
#create a date variable
toptimelines$date = substr(toptimelines$created_at, 1, 10)
toptimelines$date = as.Date(toptimelines$date)
#get number of tweets with aid words each day
toptimelines$dailyaidcount = 1
toptimelines %>%
group_by(date) %>%
ungroup
#create a date variable
toptimelines$date = substr(toptimelines$created_at, 1, 10)
toptimelines$date = as.Date(toptimelines$date)
#get number of tweets with aid words each day
toptimelines$dailyaidcount = 0
toptimelines %>%
group_by(date) %>%
mutate(dailyaidcount = sum(aidwordincluded)) %>%
ungroup
wewant = c("dailaidcount", "date")
aidseries = data.frame(toptimelines[wewant])
#create a date variable
toptimelines$date = substr(toptimelines$created_at, 1, 10)
toptimelines$date = as.Date(toptimelines$date)
#get number of tweets with aid words each day
toptimelines$dailyaidcount = 0
toptimelines %>%
group_by(date) %>%
mutate(dailyaidcount = sum(aidwordincluded)) %>%
ungroup
toptimelines
#create a date variable
toptimelines$date = substr(toptimelines$created_at, 1, 10)
toptimelines$date = as.Date(toptimelines$date)
#get number of tweets with aid words each day
toptimelines$dailyaidcount = 0
toptimelines %>%
group_by(date) %>%
mutate(dailyaidcount = sum(aidwordincluded)) %>%
summary(lm(dailyaidcount ~ interven))
#create a date variable
toptimelines$date = substr(toptimelines$created_at, 1, 10)
toptimelines$date = as.Date(toptimelines$date)
#get number of tweets with aid words each day
toptimelines$dailyaidcount = 0
toptimelines %>%
group_by(date) %>%
mutate(dailyaidcount = sum(aidwordincluded)) %>%
ggplot(aes(x=date, y = dailyaidcount))
#create a date variable
toptimelines$date = substr(toptimelines$created_at, 1, 10)
toptimelines$date = as.Date(toptimelines$date)
#get number of tweets with aid words each day
toptimelines$dailyaidcount = 0
toptimelines %>%
group_by(date) %>%
mutate(dailyaidcount = sum(aidwordincluded)) %>%
ggplot(aes(x=date, y = dailyaidcount))
#create a date variable
toptimelines$date = substr(toptimelines$created_at, 1, 10)
toptimelines$date = as.Date(toptimelines$date)
#get number of tweets with aid words each day
toptimelines$dailyaidcount = 0
toptimelines = toptimelines %>%
group_by(date) %>%
mutate(dailyaidcount = sum(aidwordincluded)) %>%
ungroup
toptimelines
toptimelines %>%
ggplot(aes(x=date, y = dailyaidcount))
toptimelines
toptimelines %>%
summary(lm(dailyaidcount~interven))
toptimelines %>%
(lm(dailyaidcount~interven))
toptimelines %>%
summary(lm(dailyaidcount~interven))
toptimelines %>%
summary(full_lm(dailyaidcount~interven))
toptimelines %>%
ggplot(aes(dailyaidcount ~ interven))
toptimelines %>%
ggplot(aes(x = date, y = dailyaidcount))
toptimelines %>%
ggplot(aes(x = date, y = dailyaidcount))
toptimelines
plot(toptimelines$dailyaidcount)
plot(toptimelines$date, toptimelines$dailyaidcount)
plot(toptimelines$date, toptimelines$dailyaidcount)
summary(lm(toptimelines$dailyaidcount ~ toptimelines$date + toptimelines$interven))
setwd("~/GitHub/kwilliams.github.io")
setwd("~/GitHub/kwilliams215090.github.io")
setwd("~/GitHub/kwilliams21509.github.io")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
setwd("~/Users/kayla/Documents/GitHub/kwilliams21509.github.io")
setwd("~/")
setwd("~/Users/kayla/Documents/GitHub/kwilliams21509.github.io")
setwd("~/Documents/GitHub/kwilliams21509.github.io")
health_full= read_csv("("https://chronicdata.cdc.gov/api/views/swc5-untb/rows.csv?accessType=DOWNLOAD&bom=true&format=true")")
health_full= read_csv("https://chronicdata.cdc.gov/api/views/swc5-untb/rows.csv?accessType=DOWNLOAD&bom=true&format=true")")
health_full = read_csv("https://chronicdata.cdc.gov/api/views/swc5-untb/rows.csv?accessType=DOWNLOAD&bom=true&format=true")")
health_full -> read_csv("https://chronicdata.cdc.gov/api/views/swc5-untb/rows.csv?accessType=DOWNLOAD&bom=true&format=true")")
health_full -> read_csv("https://chronicdata.cdc.gov/api/views/swc5-untb/rows.csv?accessType=DOWNLOAD&bom=true&format=true")
health_full = read_csv("https://chronicdata.cdc.gov/api/views/swc5-untb/rows.csv?accessType=DOWNLOAD&bom=true&format=true")
write_csv = (health_full, "health_full.csv")
write_csv = (health_full, "health_full.csv")
write_csv(health_full, "health_full.csv")
write_csv(health_full, "health_full.csv")
health_full_again = read_csv("health_full.csv")
rm(health_full_again)
library(rtweet)
library(tidyverse)
library(tidytext)
library(ggplot2)
library(dplyr)
library(lubridate)
library(ngram)
library(stringr)
library(wordcloud)
library(tm)
library(quanteda)
library(tidytext)
summary(lm(donate$Searches ~ donate$interven))
donate = read_csv("/Users/kayla/Desktop/Stanford Work /PS 151/donate21.csv")
donate = rename(donate,"Date" = "Category: All categories", "Searches" = "X2")
donate = donate[3:nrow(donate), ]
donate$Searches = strtoi(donate$Searches)
donate$interven = 0
donate = donate %>%
mutate(interven = ifelse(Date>"2020-03-01", (interven=1), (interven = 0 )))
summary(lm(donate$Searches ~ donate$interven))
donate = read_csv("/Users/kayla/Desktop/Stanford Work /PS 151/donate21.csv")
donate = rename(donate,"Date" = "Category: All categories", "Searches" = "X2")
donate = donate[3:nrow(donate), ]
donate$Searches = strtoi(donate$Searches)
donate$interven = 0
donate = donate %>%
mutate(interven = ifelse(Date>"2020-03-01", (interven=1), (interven = 0 )))
summary(lm(donate$Searches ~ donate$interven))
#load "mutual aid" google trend data and clean it
mutualaid  = read_csv("/Users/kayla/Desktop/Stanford Work /PS 151/mutualaidsearches.csv")
#rename columns
mutualaid = rename(mutualaid, "Date" = "Category: All categories", "Searches" = "X2")
#exclude empty rows
mutualaid = mutualaid[3:nrow(mutualaid), ]
head(mutualaid)
#convert Date from str to date
mutualaid$Date = as.Date(mutualaid$Date)
mutualaid$Searches = strtoi(mutualaid$Searches)
#set up interven var to know whether it was before or after Mar 20
mutualaid$interven = 0
mutualaid = mutualaid %>%
mutate(interven = ifelse(Date>"2020-03-01", (interven=1), (interven = 0 )))
mutualaid
mutualaid = as.data.frame(mutualaid)
summary(lm(mutualaid$Searches ~ mutualaid$interven))
